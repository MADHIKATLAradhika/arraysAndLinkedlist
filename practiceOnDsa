Question 1: Java 1D Array
Skill Mapping: Basic
Description: Solve the HackerRank Problem

import java.util.*;

public class Solution {

    public static void main(String[] args) {
	   
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();
        int a[]=new int[n];
        for(int i=0;i<a.length;i++)
             a[i]=scan.nextInt();

        scan.close();

        // Prints each sequential element in array a
        for (int i = 0; i < a.length; i++) {
            System.out.println(a[i]);
        }
    }
}

link:https://www.hackerrank.com/challenges/java-1d-array-introduction/copy-from/337007474

Question 2: Java 2D Array

Skill Mapping: Basic

Description: Solve the HackerRank Problem
import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;



public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        List<List<Integer>> arr = new ArrayList<>();

        IntStream.range(0, 6).forEach(i -> {
            try {
                arr.add(
                    Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
                        .map(Integer::parseInt)
                        .collect(toList())
                );
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });
        System.out.println(largestSum(arr));
        bufferedReader.close();
    }
        
    public static int largestSum(List<List<Integer>> arr)
    {
    int max = Integer.MIN_VALUE;
    int rowCount = arr.size();
    int colCount = arr.get(0).size();

    for (int row = 0; row < rowCount - 2; row++) {
        for (int col = 0; col < colCount - 2; col++) {
            int sum1 = arr.get(row).get(col) + arr.get(row).get(col + 1) + arr.get(row).get(col + 2);
            int sum2 = arr.get(row + 1).get(col + 1);
            int sum3 = arr.get(row + 2).get(col) + arr.get(row + 2).get(col + 1) + arr.get(row + 2).get(col + 2);
            int sumTotal = sum1 + sum2 + sum3;
            max = Math.max(max, sumTotal);
        }
    }
    return max;
    }
        
    
}
link:https://www.hackerrank.com/challenges/java-2d-array/submissions/code/337008108

